openapi: "3.0.0"
info:
  title: "Wutsi Marketplace Manager API"
  description: Marketplace Business Layer
  version: "1.0.0"

servers:
  - url: https://marketplace-manager-test.herokuapp.com
    description: Sandbox
  - url: https://marketplace-manager-prod.herokuapp.com
    description: Production

paths:
  /v1/stores:
    post:
      operationId: "activate-store"
      description: Activate the store of the current user
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivateStoreResponse'
      tags:
        - Store

    delete:
      operationId: "deactivate-store"
      description: Disable the store of the current user
      responses:
        200:
          description: Success
      tags:
        - Store
      security:
        - api_key: []

  /v1/stores/{id}:
    get:
      operationId: "get-store"
      description: Get a store
      parameters:
        - in: path
          name: id
          description: ID of the store
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStoreResponse'
      tags:
        - Store


  /v1/products:
    post:
      operationId: create-product
      description: Add product into the current user's store
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateProductResponse'
      tags:
        - Product
      security:
        - api_key: []

  /v1/products/attributes:
    post:
      operationId: update-product-attribute
      description: Update a set of product attributes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductAttributeListRequest'
      responses:
        200:
          description: Success
      tags:
        - Product
      security:
        - api_key: []

  /v1/products/{id}/publish:
    post:
      operationId: "publish-product"
      description: Publish a product
      parameters:
        - in: path
          name: id
          description: ID of the product
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Success
      tags:
        - Product
      security:
        - api_key: []

  /v1/products/{id}/unpublish:
    post:
      operationId: "unpublish-product"
      description: Unpublish a product
      parameters:
        - in: path
          name: id
          description: ID of the product
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Success
      tags:
        - Product
      security:
        - api_key: []

  /v1/products/import:
    post:
      operationId: import-product
      description: Import products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImportProductRequest'
      responses:
        200:
          description: Success
      tags:
        - Product
      security:
        - api_key: []

  /v1/products/search:
    post:
      operationId: "search-product"
      description: Search Product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchProductRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchProductResponse'
      tags:
        - Product

  /v1/products/{id}:
    get:
      operationId: "get-product"
      description: Return information about an product
      parameters:
        - in: path
          name: id
          description: ID of the product
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductResponse'
      tags:
        - Product

    delete:
      operationId: "delete-product"
      description: Delete a product
      parameters:
        - in: path
          name: id
          description: ID of the product
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Success
      tags:
        - Product

  /v1/pictures:
    post:
      operationId: add-picture
      description: Add a picture to a product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPictureRequest'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddPictureResponse'
      tags:
        - Product
      security:
        - api_key: []

  /v1/pictures/{id}:
    delete:
      operationId: delete-picture
      description: Delete a picture to a product
      parameters:
        - in: path
          name: id
          description: ID of the picture
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Success
      tags:
        - Product
      security:
        - api_key: []


  /v1/categories/import:
    get:
      operationId: "import-category"
      description: |
        Import all the product categories.
        Wutsi used [Google Product Categories](https://support.google.com/merchants/answer/6324436) for categorizing products
      parameters:
        - in: query
          name: language
          description: 2 letter code of the language of the categories
          required: true
          schema:
            type: string
            required: true
      responses:
        200:
          description: Success
      tags:
        - Category
      security:
        - api_key: []


components:
  securitySchemes:
    api_key:
      type: apiKey
      in: header
      name: Authorization

  schemas:
    ActivateStoreResponse:
      type: object
      properties:
        storeId:
          type: integer
          format: int64
          description: ID of the store

    CreateProductRequest:
      type: object
      properties:
        pictureUrl:
          type: string
          description: Product title
          nullable: true
        categoryId:
          type: integer
          format: int64
          nullable: true
        title:
          type: string
          description: Product title
        summary:
          type: string
          description: Product summary
          nullable: true
        price:
          type: integer
          format: int64
          description: Price of the product
          nullable: true
        quantity:
          type: integer
          description: Quantity in stock
          nullable: true
      required:
        - title

    CreateProductResponse:
      type: object
      properties:
        productId:
          type: integer
          format: int64
          description: ID of the product created

    UpdateProductAttributeListRequest:
      type: object
      properties:
        productId:
          type: integer
          format: int64
          description: ID of the product created
        attributes:
          type: array
          items:
            $ref: "#/components/schemas/ProductAttribute"
      required:
        - attributes

    ProductAttribute:
      type: object
      properties:
        name:
          type: string
          description: Name of the attribute to update
          enum:
            - title
            - summary
            - description
            - price
            - thumbnail-id
            - category-id
            - quantity
        value:
          type: string
          description: Value of the attribute
          nullable: true
      required:
        - name

    AddPictureRequest:
      type: object
      properties:
        productId:
          type: integer
          format: int64
          description: ID of the product
        url:
          type: string
          description: URL of the picture
      required:
        - url

    AddPictureResponse:
      type: object
      properties:
        pictureId:
          type: integer
          format: int64
          description: ID of the picture

    ImportProductRequest:
      type: object
      properties:
        url:
          type: string
          description: URL of CSV file
      required:
        - url

    GetProductResponse:
      type: object
      properties:
        product:
          type: object
          $ref: "#/components/schemas/Product"

    SearchProductRequest:
      type: object
      properties:
        productIds:
          type: array
          items:
            type: integer
            format: int64
        categoryIds:
          type: array
          items:
            type: integer
            format: int64
        storeId:
          type: integer
          format: int64
          nullable: true
        limit:
          type: integer
          default: 100
        offset:
          type: integer
          default: 0
        status:
          type: string
          enum:
            - DRAFT
            - PUBLISHED
          nullable: true
        sortBy:
          type: string
          enum:
            - RECOMMENDED
            - PRICE_DESC
            - PRICE_ASC
            - TITLE
          nullable: true

    SearchProductResponse:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: "#/components/schemas/ProductSummary"

    ProductSummary:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier of the product
        storeId:
          type: integer
          format: int64
          description: ID of the merchant account
        thumbnailUrl:
          type: string
          format: url
          nullable: true
        title:
          type: string
          description: Product title
        summary:
          type: string
          description: Product summary
          nullable: true
        price:
          type: integer
          format: int64
          description: Price of the product
          nullable: true
        comparablePrice:
          type: integer
          format: int64
          description: Comparable Price of the product
          nullable: true
        categoryId:
          type: integer
          format: int64
          description: ID of the category
          nullable: true
        currency:
          type: string
          description: Product's country
        quantity:
          type: integer
          description: Quantity in stock
          nullable: true
        status:
          type: string
          enum:
            - DRAFT
            - PUBLISHED

    Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier of the product
        store:
          type: object
          $ref: "#/components/schemas/StoreSummary"
        thumbnail:
          type: object
          $ref: "#/components/schemas/PictureSummary"
        pictures:
          type: array
          items:
            $ref: "#/components/schemas/PictureSummary"
        title:
          type: string
          description: Product title
        summary:
          type: string
          description: Product summary
          nullable: true
        description:
          type: string
          description: Product long description
          nullable: true
        price:
          type: integer
          format: int64
          description: Price of the product
          nullable: true
        comparablePrice:
          type: integer
          format: int64
          description: Comparable Price of the product
          nullable: true
        currency:
          type: string
          description: Product's currency
        quantity:
          type: integer
          description: Quantity in stock
          nullable: true
        created:
          type: string
          format: date-time
          description: Creation Date/Time
        updated:
          type: string
          format: date-time
          description: Last modification Date/Time
        status:
          type: string
          enum:
            - DRAFT
            - PUBLISHED
        published:
          type: string
          format: date-time
          description: Published modification Date/Time
          nullable: true

    PictureSummary:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier of the product
        url:
          type: string
          format: url
          description: URL of picture

    GetStoreResponse:
      type: object
      properties:
        store:
          type: object
          $ref: "#/components/schemas/Store"

    Store:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID of created store
        accountId:
          type: integer
          format: int64
          description: ID of the associated account
        currency:
          type: string
          description: Currency of the store
        productCount:
          type: integer
          description: Total products
        publishedProductCount:
          type: integer
          description: Total published products
        created:
          type: string
          format: date-time
          description: Registration Date/Time
        updated:
          type: string
          format: date-time
          description: Last modification Date/Time
        deactivated:
          type: string
          format: date-time
          description: De-activation date/time
          nullable: true
        status:
          type: string
          enum:
            - UNDER_REVIEW
            - ACTIVE
            - INACTIVE

    StoreSummary:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID of created store
        accountId:
          type: integer
          format: int64
          description: ID of the associated account
        currency:
          type: string
          description: Currency of the store
        status:
          type: string
          enum:
            - UNDER_REVIEW
            - ACTIVE
            - INACTIVE
        created:
          type: string
          format: date-time
          description: Registration Date/Time
